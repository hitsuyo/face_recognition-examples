import cv2
import face_recognition
import numpy
import csv
import MySQLdb
import MySQLdb.cursors



img = cv2.imread('dwayne_johnson.jpg')
cascPath = 'hasCascade.xml'
faceCascade = cv2.CascadeClassifier(cascPath)
# Chuyển ảnh ở không gian màu RGB sang ảnh xám
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)


biden_image = face_recognition.load_image_file("biden.jpg")
obama_image = face_recognition.load_image_file("obama.jpg")
dwayne_johnson_image = face_recognition.load_image_file("dwayne_johnson.jpg")

biden_face_encoding = face_recognition.face_encodings(biden_image)[0]
obama_face_encoding = face_recognition.face_encodings(obama_image)[0]
dwayne_johnson_encoding = face_recognition.face_encodings(dwayne_johnson_image)[0]

# print (biden_face_encoding)
#print (len(biden_face_encoding))
#print (type(biden_face_encoding))

biden_face_encoding_str = biden_face_encoding.tostring()
obama_face_encoding_str = obama_face_encoding.tostring()
dwayne_johnson_encoding_str = dwayne_johnson_encoding.tostring()

# Chọn hình ảnh cần nhận dạng
unknown_image = face_recognition.load_image_file("biden.jpg")
unknown_face_encoding     = face_recognition.face_encodings(unknown_image)[0]
unknown_face_encoding_str = unknown_face_encoding.tostring() # byte
#print (dwayne_johnson_encoding_str)
#print (type(dwayne_johnson_encoding_str))

#print(type(biden_face_encoding))
##aa = numpy.fromstring(biden_face_encoding_str)

#print (len(obama_face_encoding_str))


#######################
# Ket noi co so du lieu
db = MySQLdb.connect("localhost", "root", "mysql", "Data_Person",cursorclass = MySQLdb.cursors.SSCursor )
cursor = db.cursor()
# Hien thi ID doi tuong
enc = 1

sql3 = """"SELECT id,name,years_Old FROM encode_List WHERE encode_Str="\x00\x00\x00\xc0\xbc\xb1l?\x00\x00\x00\x80\r\xd8\xc7?
\x00\x00\x00\x00U\xb8\xb9?\x00\x00\x00\xa0X-\xa6\xbf\x00\x00\x00\x80QL\xc0\xbf\x00\x00\x00@<7\xa6?\x00\x00\x00\xa0\xd9\xa4
\x95\xbf\x00\x00\x00 \x03\x19\xb6\xbf\x00\x00\x00 ;\xb5\xb1?\x00\x00\x00\x80\xd3\x1d\xaf\xbf\x00\x00\x00\xa0\x18\x0c\xcf?
\xb7\xa6\xbf\x00\x00\x00 s\xcc\xd0\xbf\x00\x00
\x00`W\xa3\xa8\xbf\x00\x00\x00 "f\xac?\x00\x00\x00\xa0M\xd1\xc0?\x00\x00\x00\x80]\xe2\xc2\xbf\x00\x00\x00\x80\x9e\xac\xaf
\xbf\x00\x00\x00`\x92X\xca\xbf\x00\x00\x00@\xed\\\xb2\xbf\x00\x00\x00`\x9d\x1d\x9d\xbf\x00\x00\x00\xe0R\xf7\x9f\xbf\x00\x00
\x00\x80p\x1b\xa2?\x00\x00\x00\x00\xc8\xd0\xb4\xbf\x00\x00\x00@\x7f\xb7\xc7\xbf\x00\x00\x00\x80\xc8\'\xcd\xbf\x00\x00\x00\xc0U
\xc5\xa5\xbf\x00\x00\x00\x807B\xbc\xbf\x00\x00\x00\xc0\x12\t\x80\xbf\x00\x00\x00\xc0&D\xc4\xbf\x00\x00\x00\xc0]3\xad?\x00\x00
\x00\x00~\xbe\xa2\xbf\x00\x00\x00@\xc7\x92\xc1\xbf\x00\x00\x00\xa0\xaf\xea\xab\xbf\x00\x00\x00\x80H\x13\xa9\xbf\x00\x00\x00
\xc0\xe0:\xa5\xbf\x00\x00\x00 K\xb8\x9a\xbf\x00\x00\x00\x801s\xae\xbf\x00\x00\x00 }\xa4\xc0?\x00\x00\x00\x80\xe8\x16\x97?\x00
\x00\x00 \t\xe0\xc5\xbf\x00\x00\x00@\x92\x81\xbf?\x00\x00\x00\x00\xc0\xf4_\xbf\x00\x00\x00\xe0\x06C\xc9?\x00\x00\x00@\xdd4
\xd3?\x00\x00\x00\xc0+\xb6\x86\xbf\x00\x00\x00\x00\x91\xba\xa9?\x00\x00\x00\x00\xdb)\xbf\xbf\x00\x00\x00\xa0p\x15\xc1?\x00
\x00\x00 x\x18\xcf\xbf\x00\x00\x00\xc0\xcfx\xb0?\x00\x00\x00\x00\xf3\xd2\x9d?\x00\x00\x00 \xc9W\xc5?\x00\x00\x00\xa0\xc8\xea
\xaf?\x00\x00\x00@\xef\xf2\xc1?\x00\x00\x00\x00\xc8\xe6\xb6\xbf\x00\x00\x00@\xf9:\x9c?\x00\x00\x00\xe0\xfaE\xc5?\x00\x00\x00 
\x83\xde\xc9\xbf\x00\x00\x00\xe0\xeb\x87\xa5?\x00\x00\x00@\xae\x82\xb1?\x00\x00\x00 \xef\xd6\xa4\xbf\x00\x00\x00\x00\x98\x9b
\x9d?\x00\x00\x00 6:\xa2\xbf\x00\x00\x00 \xc0\x81\xbe?\x00\x00\x00\xc0\xb4%\xbc?\x00\x00\x00\x00\xffP\x89\xbf\x00\x00\x00\x00
\xcf\xf9\xba\xbf\x00\x00\x00@\x02\xad\xc6?\x00\x00\x00\xa0S{\xbb\xbf\x00\x00\x00\x80bG\xba\xbf\x00\x00\x00 ,\x0c\xa2?\x00\x00
\x00\x00\xf8\x8c\xb0\xbf\x00\x00\x00\xa0\xa4\x0c\xc0\xbf\x00\x00\x00`\\^\xd5\xbf\x00\x00\x00\xc0\xf9\xc7y?\x00\x00\x00@\x9c
\xc2\xd0?\x00\x00\x00 \n\'\xc3?\x00\x00\x00`w\xf5\xd1\xbf\x00\x00\x00@\xae(\xb4\xbf\x00\x00\x00\x80#\x81\xae\xbf\x00\x00\x00
\x80\xda\xdbW?\x00\x00\x00\xc0w\x10\xa2?\x00\x00\x00\x00nG^?\x00\x00\x00\x80=1\xaf\xbf\x00\x00\x00\xe0\xc6`\xc1\xbf\x00\x00
\x00`\xa0\xa3\xa9\xbf\x00\x00\x00\xc0Sa\x8a\xbf\x00\x00\x00\xa0\xfbJ\xcd?\x00\x00\x00`|K\xbd\xbf\x00\x00\x00\x00Pk\x0c\xbf
\x00\x00\x00\x80z1\xcd?\x00\x00\x00\xc0\xe4\xbe\xa3?\x00\x00\x00\x00\xfcA\xc0\xbf\x00\x00\x00 *u\xa6?\x00\x00\x00@$\xe5\x98
\xbf\x00\x00\x00\xc0\x05b\xbf\xbf\x00\x00\x00\xc0\xca\xd7e\xbf\x00\x00\x00`\xd1X\xbb\xbf\x00\x00\x00\x80\xd3E\xa8\xbf\x00\x00
\x00\xe0S:\x8a\xbf\x00\x00\x00\x80\'S\xc4\xbf\x00\x00\x00\x80c\xef\x8b\xbf\x00\x00\x00\x00\x04\xf9\xb2?\x00\x00\x00\xe00\xb8
\xd0\xbf\x00\x00\x00\xc0\xff,\xc5?\x00\x00\x00\xa0\x12\xa7\xa1\xbf\x00\x00\x00`\xe15\xb2\xbf\x00\x00\x00\xc0\x1a\xaf\xa7\xbf
\x00\x00\x00\xc0(a\xaa\xbf\x00\x00\x00\xe0e\xfc\x85?\x00\x00\x00@\xe3\x1e\xb0?\x00\x00\x00\xe0;Y\xce?\x00\x00\x00`\xf9"\xce
\xbf\x00\x00\x00@#2\xca?\x00\x00\x00\xe0[\xc4\xcd?\x00\x00\x00@\x0c\x1b\xa8\xbf\x00\x00\x00\xe0j\x82\xb1?\x00\x00\x00@\xb13
\x9a?\x00\x00\x00\xe0\xca-\xae?\x00\x00\x00\xc0\x00E\xa3\xbf\x00\x00\x00\x00\xae-\xa4?\x00\x00\x00\xa0\xeb\xb5\xb6\xbf\x00
\x00\x00\x00\x86\xa8\xbb\xbf\x00\x00\x00\x004\x08<?\x00\x00\x00 
\xd3\xb3\xa0\xbf\x00\x00\x00\x807B\x88?\x00\x00\x00\x00@\x8a\xb2?" """
sql2 = """SELECT * FROM encode_List WHERE (id = %s) """, (enc,)
sql1 = "SELECT * FROM encode_List WHERE id = 2"
sql = "SELECT * FROM encode_List"
try:
    cursor.execute(sql)
    results = cursor.fetchall()
    for row in results:
      id = row[0]
      encode_Str = row[1]
      name = row[2]
      years_Old = row[3]

      # Now print fetched result
      #print("",(id, encode_Str, name, years_Old))
      print("", (id, name, years_Old))
except:
      print ("Error: unable to fetch data")
db.close()



